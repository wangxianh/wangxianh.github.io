<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo NexT主题配置功能篇]]></title>
    <url>%2F2018%2F06%2F14%2FHexo-Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E5%8A%9F%E8%83%BD%E7%AF%87%2F</url>
    <content type="text"><![CDATA[前言这两天捣鼓了一下个人博客，参考网上多个教程给自己的博客添加了一些小功能，稍微美化了一下博客，这样也更有动力写博客了。这篇文章主要介绍了如何给自己的博客添加一些实用小功能，还包括markdown的一些样式修改，还有很多有趣的功能没加进来，后面也会陆续地添加。关于Github+Hexo环境搭建看这里 一、更改默认主题为NextHexo默认主题是lanscape，效果不太满意，这里我更改为人气很高的NexT主题，主题效果可参考我的博客，NexT主题安装如下： 1. 下载主题在终端窗口下，定位到Hexo根目录，使用git命令下载： 1$ git clone https://github.com/iissnan/hexo-theme-next themes/next 2. 启用主题打开站点配置文件_config.yml,找到theme字段，将其值改为next 1theme: next 3. 验证主题终端启动Hexo本地站点，并开启调试模式（即加上--debug）,命令如下： 1$ hexo s --debug 此时浏览器中访问http://localhost:4000检查站点是否正确运行。 二、添加RSS效果图： 1. 安装hexo-generator-feed插件1$ npm install hexo-generator-feed --save 2. 打开站点配置文件config.yml，找到Extensions下面添加123456789#RSS订阅feed: type: atom path: atom.xml limit: 20 hub: content: content_limit: 140 content_limit_delim: ' ' 3.打开主题配置文件config.yml，找到rss字段，设置为1rss: /atom.xml 注意：这里提到的站点配置文件和主题配置文件分别指hexo/_config.yml和hexo/themes/next/_config.yml,后面不再强调 三、设置昵称、站点描述、网站语言、选择Scheme1. 设置作者昵称打开站点配置文件，搜索author字段，设置autour值为你的昵称 2. 站点描述打开在站点配置文件，搜索description关键字，设置description值为你的站点描述，可以是个性签名 3. 网站语言打开站点配置文件，搜索language字段，将 language 设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下： 1language: zh-Hans 4. 选择Scheme打开主题配置文件，搜索 scheme 字段。 你会看到有三行 scheme 的配置，将你需用启用的 scheme 前面注释 # 去除即可，如选择: 1scheme: Pisces 四、设置侧边栏显示侧边栏可以设置为靠左显示也可以设置为靠右显示，同时还可以设置侧边栏的显示隐藏。 1. 设置侧边栏的位置打开主题配置文件，搜索sidebar字段，修改sidebar.position的值为left(靠左显示)或者right（靠右显示），代码如下： 12sidebar: position: left 2. 设置侧边栏显示时机打开主题配置文件，搜索siedebar字段，修改sidebar.display的值： post - 默认行为，在文章页面（拥有目录列表）时显示 always - 在所有页面中都显示 hide - 在所有页面中都隐藏（可以手动展开） remove -完全移除这里设置在所有页面中显示： 12sidebar: display: always 五、添加标签、关于、分类页面这些页面添加方法类似，这里以标签页面为例，新建标签页面，并在菜单中显示标签链接. 1. 新建标签页面在终端下，定位到hexo站点目录下，输入以下命令新建一个tags页面： 1$ hexo new page tags 2. 设置页面类型打开刚刚新建的页面hexo/source/tags/index.md，将页面的类型type设置为tags，页面内容如下： 12345---title: tagsdate: 2018-06-13 10:20:51type: "tags"--- 3. 修改菜单在菜单中添加链接。编辑主题配置文件，找到menu字段，去掉tags前面的注释 注意：如果博客添加了评论的服务，这个标签页面也会带有评论功能。若需要关闭的话，请在标签页面hexo/source/tags/index.md中添加字段comments并将值设置为false，如： 123456---title: tagsdate: 2018-06-13 10:20:51type: "tags"comments: false--- 六、添加搜索功能效果图： 1. 安装hexo-generator-searchdb插件1$ npm install hexo-generator-searchdb --save 2. 打开站点配置文件，搜索Extensions字段，在下面添加：123456#添加搜索功能search: path: search.xml field: post format: html limit: 10000 3. 打开主题配置文件,找到Local search字段，将enable设置为true七、添加动态粒子背景效果图：直接打开主题配置文件,找到canvas_nest字段，将false改为true 注意：NexT主题版本在5.1.1以上 八、添加点击出现爱心效果效果图： 1. 打开网址复制其中代码2. 在hexo/themes/next/source/js/src文件夹下新建love.js文件，将上面网址中的代码粘贴进去3. 打开hexo/themes/next/layout/_layout.swig文件，在末尾&lt;/body&gt;标签上面添加以下代码：1&lt;script type="text/javascript" src="/js/src/love.js"&gt;&lt;/script&gt; 九、设置头像圆形可旋转 1. 设置自己的头像打开主题配置文件，找打avatar字段，值设置为头像的链接地址，如下所示： 1avatar: /images/touxiang.png #将头像图片放置到`source/images/`目录下 2. 修改头像为圆形可旋转 打开hexo/themes/next/source/css/_common/components/sidebar/sidebar-author.styl，添加如下代码(可注释原有代码)：点击显示/隐藏 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; /* 头像圆形 */ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf; /* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/ /* 鼠标经过头像旋转360度 */ -webkit-transition: -webkit-transform 1.0s ease-out; -moz-transition: -moz-transform 1.0s ease-out; transition: transform 1.0s ease-out;&#125;img:hover &#123; /* 鼠标经过停止头像旋转 -webkit-animation-play-state:paused; animation-play-state:paused;*/ /* 鼠标经过头像旋转360度 */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg);&#125;/* Z 轴旋转动画 */@-webkit-keyframes play &#123; 0% &#123; -webkit-transform: rotateZ(0deg); &#125; 100% &#123; -webkit-transform: rotateZ(-360deg); &#125;&#125;@-moz-keyframes play &#123; 0% &#123; -moz-transform: rotateZ(0deg); &#125; 100% &#123; -moz-transform: rotateZ(-360deg); &#125;&#125;@keyframes play &#123; 0% &#123; transform: rotateZ(0deg); &#125; 100% &#123; transform: rotateZ(-360deg); &#125;&#125; 十、添加畅言评论功能评论功能这里用畅言，ui界面跟博客风格也很搭，不过域名需要备案，若域名没有备案的可以使用来必力，但是我的来必力注册了账户后一直登陆不上，所以这里用了畅言，使用起来也很简单，效果图如下： 1. 打开畅言，注册一个账号2. 登陆畅言，在后台总览找到畅言秘钥，复制APP ID和APP KEY在登陆畅言后，需要添加自己的站点，需要填入ICP备案号，如果是阿里云购买的域名，打开阿里云，找到备案-&gt;进入备案系统查看自己的ICP备案信息： 3. 打开主题配置文件，找到changyan关键字，将enable设置为true,并填入复制的appid和appkey，代码如下：12345# changyanchangyan: enable: true appid: yourappid appkey: yourappkey 十一、添加动态萌图给自己的博客添加萌萌哒的宠物或者元气满满的动漫图，没事还可以逗逗，蛮有意思的。效果图： 1. 安装live2d模块1$ npm install --save hexo-helper-live2d 2. 安装指定的modellive2d模块中封装了很多models，点击查看,如果要使用某个model，需要先下载指定model,如这里使用live2d-widget-model-miku,打开终端hexo站点下安装; 1$ npm install --save live2d-widget-model-miku 3. 使用live2d在主题配置文件或者主题配置文件中添加如下代码： 12345678910live2d: enable: true model: #npm-module package name use: live2d-widget-model-miku #可更改 display: #设置图片位置、大小 position: right width: 150 height: 300 mobile: #设置在手机端是否显示 show: false #考虑到手机端遮挡问题，这里设置为false 十二、更改内容区域的宽度NexT主题下对于内容的宽度的设定如下： 700px，当屏幕宽度 &lt; 1600px 900px，当屏幕宽度 &gt;= 1600px 移动设备下，宽度自适应根据设置的Scheme不同，修改的方法也不同,主要分为以下两种：1. 对于Piseces SchemePiseces Scheme默认的文章内容宽度有点窄，想要扩大内容宽度，需要同时修改hexo/themes/next/source/css/_schemes/Picses/_layout.styl中header的宽度，.main-inner的宽度和.content-wrap的宽度，使用百分比的形式不会破坏其他设备的兼容性显示问题。 123456789.header &#123; width: 80%; &#125;.container .main-inner &#123; width: 80%; &#125;.content-wrap &#123; width: calc(100% - 260px); &#125; 2.其他Scheme 编辑hexo/themes/next/source/css/_variables/custom.styl 文件，新增变量： 12345// 修改成你期望的宽度$content-desktop = 700px// 当视窗超过 1600px 后的宽度$content-desktop-large = 900px 十三、网站底部添加阅读量和访客量统计效果图：站点阅读量和访客量统计这里使用的是不蒜子,使用起来很方便 使用方法打开hexo/themes/next/layout/_partials/footer.swig文件，在合适的位置(可以在末尾处)添加如下代码： 123456789101112&lt;div&gt;&lt;script async src="https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"&gt;&lt;/script&gt;&lt;span id="busuanzi_container_site_pv" style='display:none'&gt; &lt;i class="fa fa-eye"&gt;&lt;/i&gt; 本站总访问量: &lt;span id="busuanzi_value_site_pv"&gt;&lt;/span&gt; &lt;span class="post-meta-divider"&gt;|&lt;/span&gt;&lt;/span&gt;&lt;span id="busuanzi_container_site_uv" style='display:none'&gt; &lt;i class="fa fa-user-md"&gt;&lt;/i&gt; 本站访客数：&lt;span id="busuanzi_value_site_uv"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt; 第一个&lt;span&gt;标签里统计的是网站的总访问量,第二个&lt;span&gt;标签里统计的是网站的访客数。 注意：这里的pv和iv分别代表两种不同的统计方式： pv代表单个用户连续点击n篇文章，统计n次访问量 iv代表单个用户连续点击n篇文章，只统计1次访客数 十四、文章阅读次数统计效果图: 1. 添加is_pv字段打开hexo/themes/next/layout/_macro/post.swig文件，在第一行增加is_pv字段 1&#123;% macro render(post, is_index, is_pv, post_extra_class) %&#125; 2. 插入阅读次数统计代码在刚刚打开的文件post.swig中，搜索busuanzi_count字段，在这个代码块的下面插入以下代码： 1234&#123;% if is_pv %&#125; &lt;span class="post-meta-divider"&gt;|&lt;/span&gt; &lt;span id="busuanzi_value_page_pv"&gt;&lt;/span&gt;次阅读&#123;% endif %&#125; 插入位置： 十五、网站底部添加全站字数统计效果图： 1. 安装hexo-wordcount1$ npm install hexo-wordcount --save 2. 添加字数统计代码打开hexo/themes/next/layout/_partials/footer.swig文件，在末尾处添加如下代码： 12345&lt;div class="theme-info"&gt; &lt;div class="powered-by"&gt;&lt;/div&gt; &lt;i class="fa fa-pencil"&gt;&lt;/i&gt; &lt;span class="post-count"&gt;本站总字数：&#123;&#123; totalcount(site) &#125;&#125;&lt;/span&gt;&lt;/div&gt; 十六、修改文章内链接的样式和code块的样式链接样式效果图：code块样式效果图： 1. 修改链接样式打开hexo/themes/next/source/css/_common/components/post/post.styl，在末尾添加如下代码(链接颜色可自定义)： 12345678910.post-body p a &#123; color: #0593d3; border-bottom: none; border-bottom: 1px solid #0593d3; &amp;:hover &#123; color:#fc6423; border-bottom: none; border-bottom: 1px solid #fc6423; &#125;&#125; 2. 修改code块样式在刚刚打开的文件post.styl中，添加如下代码（颜色可自定义）： 1234.post-body code &#123; color: #c7254e; background: #fbecec;&#125; 十七、添加代码全选复制功能该功能目前在5.1.x版本中不成功，若要使用该功能需要将Next v5.1.x更新到v6，具体方法参考这里 1. 下载cliboard.js插件可参考github,打开终端定位到hexo站点目录下载：1$ npm install clipboard --save 下载clipboard.js或者clipboard.min.js（推荐），将其放到hexo/themes/next/source/lib/zclip/目录下(没有zclip文件夹则新建)。 2. 插入javascript在hexo/themes/next/source/js/src/目录下，新建custom.js文件，内容如下：点击显示/隐藏 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102//此函数用于创建复制按钮function createCopyBtns() &#123; var $codeArea = $("figure table"); //查看页面是否具有代码区域，没有代码块则不创建 复制按钮 if ($codeArea.length &gt; 0) &#123; //复制成功后将要干的事情 function changeToSuccess(item) &#123; $imgOK = $("#copyBtn").find("#imgSuccess"); if ($imgOK.css("display") == "none") &#123; $imgOK.css(&#123; opacity: 0, display: "block" &#125;); $imgOK.animate(&#123; opacity: 1 &#125;, 1000); setTimeout(function() &#123; $imgOK.animate(&#123; opacity: 0 &#125;, 2000); &#125;, 2000); setTimeout(function() &#123; $imgOK.css("display", "none"); &#125;, 4000); &#125;; &#125;; //创建 全局复制按钮，仅有一组。包含：复制按钮，复制成功响应按钮 //值得注意的是：1.按钮默认隐藏，2.位置使用绝对位置 position: absolute; (position: fixed 也可以，需要修改代码) $(".post-body").before('&lt;div id="copyBtn" style="opacity: 0; position: absolute;top:0px;display: none;line-height: 1; font-size:1.5em"&gt;&lt;span id="imgCopy" &gt;&lt;i class="fa fa-paste fa-fw"&gt;&lt;/i&gt;&lt;/span&gt;&lt;span id="imgSuccess" style="display: none;"&gt;&lt;i class="fa fa-check-circle fa-fw" aria-hidden="true"&gt;&lt;/i&gt;&lt;/span&gt;'); //创建 复制 插件，绑定单机时间到 指定元素，支持JQuery var clipboard = new Clipboard('#copyBtn', &#123; target: function() &#123; //返回需要复制的元素内容 return document.querySelector("[copyFlag]"); &#125;, isSupported: function() &#123; //支持复制内容 return document.querySelector("[copyFlag]"); &#125; &#125;); //复制成功事件绑定 clipboard.on('success', function(e) &#123; //清除内容被选择状态 e.clearSelection(); changeToSuccess(e); &#125;); //复制失败绑定事件 clipboard.on('error', function(e) &#123; console.error('Action:', e.action); console.error('Trigger:', e.trigger); &#125;); //鼠标 在复制按钮上滑动和离开后渐变显示/隐藏效果 $("#copyBtn").hover( function() &#123; $(this).stop(); $(this).css("opacity", 1); &#125;, function() &#123; $(this).animate(&#123; opacity: 0 &#125;, 2000); &#125; ); &#125;&#125;//感应鼠标是否在代码区$("figure").hover( function() &#123; //-------鼠标活动在代码块内 //移除之前含有复制标志代码块的 copyFlag $("[copyFlag]").removeAttr("copyFlag"); //在新的（当前鼠标所在代码区）代码块插入标志：copyFlag $(this).find(".code").attr("copyFlag", 1); //获取复制按钮 $copyBtn = $("#copyBtn"); if ($copyBtn.lenght != 0) &#123; //获取到按钮的前提下进行一下操作 //停止按钮动画效果 //设置为 显示状态 //修改 复制按钮 位置到 当前代码块开始部位 //设置代码块 左侧位置 $copyBtn.stop(); $copyBtn.css("opacity", 0.8); $copyBtn.css("display", "block"); $copyBtn.css("top", parseInt($copyBtn.css("top")) + $(this).offset().top - $copyBtn.offset().top + 3); $copyBtn.css("left", -$copyBtn.width() - 3); &#125; &#125;, function() &#123; //-------鼠标离开代码块 //设置复制按钮可见度 2秒内到 0 $("#copyBtn").animate(&#123; opacity: 0 &#125;, 2000); &#125;);//页面载入完成后，创建复制按钮$(document).ready(function() &#123; createCopyBtns();&#125;); 3. 插入主题中在hexo/themes/next/layout/_custom/目录下，新建 custom.swig文件，内容如下： 12&lt;script type="text/javascript" src="/lib/zclip/clipboard.min.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="/js/src/custom.js"&gt;&lt;/script&gt; 4. 修改代码编辑hexo/themes/next/layout/_layout.swig文件，在&lt;/body&gt;前插入如下代码： 1&#123;% include '_custom/custom.swig' %&#125; 十八、添加代码可折叠功能效果图： 1. 添加折叠js编辑hexo/themes/next/source/js/src/post-details.js文件，在合适的位置(末尾处)添加如下代码： 12345678$(document).ready(function()&#123; $(document).on('click', '.fold_hider', function()&#123; $('&gt;.fold', this.parentNode).slideToggle(); $('&gt;:first', this).toggleClass('open'); &#125;); //默认情况下折叠 $("div.fold").css("display","none");&#125;); 2. 添加内建标签在hexo/themes/next/scripts/目录下，新建tags.js文件，添加如下代码： 点击显示/隐藏 123456789101112131415161718192021222324/* @haohuawu 修复 Nunjucks 的 tag 里写 ```代码块```，最终都会渲染成 undefined 的问题 https://github.com/hexojs/hexo/issues/2400*/const rEscapeContent = /&lt;escape(?:[^&gt;]*)&gt;([\s\S]*?)&lt;\/escape&gt;/g;const placeholder = '\uFFFD';const rPlaceholder = /(?:&lt;|&amp;lt;)\!--\uFFFD(\d+)--(?:&gt;|&amp;gt;)/g;const cache = [];function escapeContent(str) &#123; return '&lt;!--' + placeholder + (cache.push(str) - 1) + '--&gt;';&#125;hexo.extend.filter.register('before_post_render', function(data) &#123; data.content = data.content.replace(rEscapeContent, function(match, content) &#123; return escapeContent(content); &#125;); return data;&#125;);hexo.extend.filter.register('after_post_render', function(data) &#123; data.content = data.content.replace(rPlaceholder, function() &#123; return cache[arguments[1]]; &#125;); return data;&#125;); 再在该目录下新建一个fold.js文件，内容如下： 1234567891011121314151617181920212223242526272829/* global hexo */// Usage: &#123;% fold ???? %&#125; Something &#123;% endfold %&#125;function fold (args, content) &#123; var text = args[0]; if(!text) text = "点击显/隐"; return '&lt;div&gt;&lt;div class="fold_hider"&gt;&lt;div class="close hider_title"&gt;' + text + '&lt;/div&gt;&lt;/div&gt;&lt;div class="fold"&gt;\n' + hexo.render.renderSync(&#123;text: content, engine: 'markdown'&#125;) + '\n&lt;/div&gt;&lt;/div&gt;';&#125;hexo.extend.tag.register('fold', fold, &#123;ends: true&#125;);``#### 3. 添加自定义样式编辑`hexo/themes/next/source/css/_custom/custom.styl`，添加几个自定义样式：``` bash//折叠代码样式.hider_title&#123; font-family: "Microsoft Yahei"; cursor: pointer; width: 130px; background: #222; color: #87daff; border-radius: 5px;&#125;.close:after&#123; content: "▼";&#125;.open:after&#123; content: "▲";&#125; 4. 使用方法在我们需要折叠的地方前后添加便签，用法如下： 123&#123;% fold 点击显示/隐藏 %&#125;something you want to fold, include code block.&#123;% endfold %&#125; 十九、设置网站图标效果图： 1. 下载图标在iconfont或其他图标网站下载一张1616大小和3232大小的图标,放到hexo/themes/next/images/文件夹下，假设命名为myfavicon-16x16-next.png和myfavicon-32x32-next.png 2. 设置图标打开主题配置文件，搜索favicon关键字，分别将favicon.small和favicon.medium设置为刚刚下载的图标，代码如下： 1234567891011121314favicon: #修改默认图标 small: /images/myfavicon-16x16-next.png medium: /images/myfavicon-32x32-next.png apple_touch_icon: /images/apple-touch-icon-next.png safari_pinned_tab: /images/logo.svg``` ## 二十、博文压缩#### 1. 下载gulp``` bash$ npm install gulp -g$ npm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save 2. 在hexo站点根目录下新建gulpfile.js文件，内容如下：点击显示/隐藏 var gulp = require('gulp'); var minifycss = require('gulp-minify-css'); var uglify = require('gulp-uglify'); var htmlmin = require('gulp-htmlmin'); var htmlclean = require('gulp-htmlclean'); // 压缩 public 目录 css gulp.task('minify-css', function() { return gulp.src('./public/**/*.css') .pipe(minifycss()) .pipe(gulp.dest('./public')); }); // 压缩 public 目录 html gulp.task('minify-html', function() { return gulp.src('./public/**/*.html') .pipe(htmlclean()) .pipe(htmlmin({ removeComments: true, minifyJS: true, minifyCSS: true, minifyURLs: true, })) .pipe(gulp.dest('./public')) }); // 压缩 public/js 目录 js gulp.task('minify-js', function() { return gulp.src('./public/**/*.js') .pipe(uglify()) .pipe(gulp.dest('./public')); }); // 执行 gulp 命令时执行的任务 gulp.task('default', [ 'minify-html','minify-css','minify-js' ]); 3. 执行hexo g &amp;&amp; gulp生成博文生成博文是执行 hexo g &amp;&amp; gulp 就会根据gulpfile.js中的配置，对 public 目录中的静态资源文件进行压缩 参考文档：http://theme-next.iissnan.com/faqs.html]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mac平台下搭建Github+Hexo博客过程]]></title>
    <url>%2F2018%2F06%2F13%2FMac%E5%B9%B3%E5%8F%B0%E4%B8%8B%E6%90%AD%E5%BB%BAGithub-Hexo%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[前言作为自己的第一篇博客，主要记录一下自己搭建github+hexo博客的过程，也激励自己要常写博客，常总结常记录！这个搭建过程主要包括安装Hexo、关联自己的github、关联自己的域名,还有Next主题配置。关于博客的主题配置篇将在下一篇详细介绍。 一、Requirements在安装Hexo之前需要先安装Node.js和Git Node.js用nvm来安装Node.js或者Node官网下载LTS版本安装，nvm的方式安装,输入以下命令安装nvm： 12cURL: $ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash 12Wget:$ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.3 nvm安装好后，新开一个终端输入以下命令来安装Node.js(默认安装node最新版本，可指定版本)1$ nvm install stable Git使用Homebrew命令行安装git1$ brew install git 二、安装Hexo1. 输入以下命令安装hexo：1$ sudo npm install -g hexo 2. 本地新建一个目录/Users/wxh/Work/hexo,进入hexo目录下执行:12$ hexo init$ hexo install 3. 生成静态文件：g是generate缩写1$ hexo g 4. 启动本地服务器：s是server的缩写1$ hexo s 此时浏览器中输入http://localhost:4000，即可看到效果: 三、关联github1. 新建github仓库在自己的github上新建一个仓库，名为yourname.github.io,yourname是github的用户名（我的是wangxianh.github.io），这个仓库命名规则固定不变。如果之前没有生成过ssh的key，需要新建一对ssh的key,并将id_rsa.pub添加到github,这里参考https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/ 2. 修改_config.yml文件编辑本地hexo根目录下的_config.yml文件，找到deploy关键字，然后添加如下三行： 123deploy: type: git repository: git@github.com:yourname/yourname.github.io.git 注意： 每个关键字的冒号后面都有个空格 3. 部署运行上面两步就关联好了github,接下来需要进入hexo目录下执行以下命令： 123$ hexo clean #清除缓存db.json和public文件夹 $ hexo g #生成md文件的静态页面，md文件在hexo/source/_posts目录下，新写的md文件复制到此即可$ hexo d #将public文件夹中的内容推送到git仓库 此时浏览器中输入https://yourname.github.io就能看到自己博客啦! 可能出现的问题： 1.输入 hexo d 可能出现如下问题：ERROR Deployer not found: git 解决方案：终端输入： 1$ npm install --save hexo-deployer-git 2.输入 hexo d 推送到git时可能出现: Permission denied(publickey)原因：没有将公钥添加到github 解决方案：参考https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/ 四、关联域名1. 域名解析可以在阿里云上购买一个域名，在阿里云管理控制台找到购买的域名（注意域名状态审核中无法访问），添加两条域名解析规则：这两条解析可以保证你的域名带不带www都能正常解析。 2. 添加CNAME文件进入hexo/themes/landscape/source目录下新建CNAME文件(没有后缀)，内容为自己的域名. 12$ cd your-hexo/themes/landscape/source #到达指定目录$ sudo vi CNAME #新建CNAME文件，输入自己的域名，:wq!保存退出 这个CNAME文件必不可少，每次运行generate的时候会把这个路径下的东西copy到public目录下. 3. 部署运行在终端（hexo目录下）输入以下命令运行: 123$ hexo clean$ hexo g$ hexo d 此时，输入我们的域名www.bestyou.wang就可以看到我们的博客啦。 参考网站: https://blog.csdn.net/yanzi1225627/article/details/54566792]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>github - Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F06%2F12%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post 1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
